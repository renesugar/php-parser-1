//line php5/php5.y:2
package php5

import __yyfmt__ "fmt"

//line php5/php5.y:2
import (
	"strconv"
	"strings"

	"github.com/z7zmey/php-parser/comment"
	"github.com/z7zmey/php-parser/node"
	"github.com/z7zmey/php-parser/node/expr"
	"github.com/z7zmey/php-parser/node/expr/assign"
	"github.com/z7zmey/php-parser/node/expr/binary"
	"github.com/z7zmey/php-parser/node/expr/cast"
	"github.com/z7zmey/php-parser/node/name"
	"github.com/z7zmey/php-parser/node/scalar"
	"github.com/z7zmey/php-parser/node/stmt"
	"github.com/z7zmey/php-parser/scanner"
)

//line php5/php5.y:22
type yySymType struct {
	yys                     int
	node                    node.Node
	token                   *scanner.Token
	list                    []node.Node
	simpleIndirectReference simpleIndirectReference

	ClassExtends     *stmt.ClassExtends
	ClassImplements  *stmt.ClassImplements
	InterfaceExtends *stmt.InterfaceExtends
	ClosureUse       *expr.ClosureUse
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_CONST = 57380
const T_RETURN = 57381
const T_TRY = 57382
const T_CATCH = 57383
const T_FINALLY = 57384
const T_THROW = 57385
const T_USE = 57386
const T_INSTEADOF = 57387
const T_GLOBAL = 57388
const T_VAR = 57389
const T_UNSET = 57390
const T_ISSET = 57391
const T_EMPTY = 57392
const T_HALT_COMPILER = 57393
const T_CLASS = 57394
const T_TRAIT = 57395
const T_INTERFACE = 57396
const T_EXTENDS = 57397
const T_IMPLEMENTS = 57398
const T_OBJECT_OPERATOR = 57399
const T_DOUBLE_ARROW = 57400
const T_LIST = 57401
const T_ARRAY = 57402
const T_CALLABLE = 57403
const T_CLASS_C = 57404
const T_TRAIT_C = 57405
const T_METHOD_C = 57406
const T_FUNC_C = 57407
const T_LINE = 57408
const T_FILE = 57409
const T_COMMENT = 57410
const T_DOC_COMMENT = 57411
const T_OPEN_TAG = 57412
const T_OPEN_TAG_WITH_ECHO = 57413
const T_CLOSE_TAG = 57414
const T_WHITESPACE = 57415
const T_START_HEREDOC = 57416
const T_END_HEREDOC = 57417
const T_DOLLAR_OPEN_CURLY_BRACES = 57418
const T_CURLY_OPEN = 57419
const T_PAAMAYIM_NEKUDOTAYIM = 57420
const T_NAMESPACE = 57421
const T_NS_C = 57422
const T_DIR = 57423
const T_NS_SEPARATOR = 57424
const T_ELLIPSIS = 57425
const T_EVAL = 57426
const T_REQUIRE = 57427
const T_REQUIRE_ONCE = 57428
const T_LOGICAL_OR = 57429
const T_LOGICAL_XOR = 57430
const T_LOGICAL_AND = 57431
const T_INSTANCEOF = 57432
const T_NEW = 57433
const T_CLONE = 57434
const T_ELSEIF = 57435
const T_ELSE = 57436
const T_ENDIF = 57437
const T_PRINT = 57438
const T_YIELD = 57439
const T_STATIC = 57440
const T_ABSTRACT = 57441
const T_FINAL = 57442
const T_PRIVATE = 57443
const T_PROTECTED = 57444
const T_PUBLIC = 57445
const T_INC = 57446
const T_DEC = 57447
const T_YIELD_FROM = 57448
const T_INT_CAST = 57449
const T_DOUBLE_CAST = 57450
const T_STRING_CAST = 57451
const T_ARRAY_CAST = 57452
const T_OBJECT_CAST = 57453
const T_BOOL_CAST = 57454
const T_UNSET_CAST = 57455
const T_COALESCE = 57456
const T_SPACESHIP = 57457
const T_NOELSE = 57458
const T_PLUS_EQUAL = 57459
const T_MINUS_EQUAL = 57460
const T_MUL_EQUAL = 57461
const T_POW_EQUAL = 57462
const T_DIV_EQUAL = 57463
const T_CONCAT_EQUAL = 57464
const T_MOD_EQUAL = 57465
const T_AND_EQUAL = 57466
const T_OR_EQUAL = 57467
const T_XOR_EQUAL = 57468
const T_SL_EQUAL = 57469
const T_SR_EQUAL = 57470
const T_BOOLEAN_OR = 57471
const T_BOOLEAN_AND = 57472
const T_POW = 57473
const T_SL = 57474
const T_SR = 57475
const T_IS_IDENTICAL = 57476
const T_IS_NOT_IDENTICAL = 57477
const T_IS_EQUAL = 57478
const T_IS_NOT_EQUAL = 57479
const T_IS_SMALLER_OR_EQUAL = 57480
const T_IS_GREATER_OR_EQUAL = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line php5/php5.y:5484

type simpleIndirectReference struct {
	all  []*expr.Variable
	last *expr.Variable
}

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 51,
	104, 435,
	105, 435,
	-2, 433,
	-1, 102,
	78, 332,
	-2, 411,
	-1, 114,
	78, 451,
	146, 447,
	-2, 457,
	-1, 154,
	104, 435,
	105, 435,
	-2, 433,
	-1, 204,
	144, 306,
	147, 306,
	-2, 430,
	-1, 205,
	104, 435,
	105, 435,
	144, 307,
	147, 307,
	-2, 433,
	-1, 271,
	78, 451,
	-2, 457,
	-1, 298,
	78, 334,
	-2, 413,
	-1, 302,
	146, 448,
	-2, 458,
	-1, 311,
	78, 333,
	-2, 412,
	-1, 378,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 274,
	-1, 379,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 275,
	-1, 380,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 276,
	-1, 381,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 277,
	-1, 382,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 278,
	-1, 383,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 279,
	-1, 384,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 280,
	-1, 385,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 281,
	-1, 392,
	104, 435,
	105, 435,
	-2, 433,
	-1, 400,
	147, 142,
	-2, 147,
	-1, 462,
	104, 435,
	105, 435,
	147, 515,
	158, 515,
	-2, 433,
	-1, 463,
	147, 516,
	158, 516,
	-2, 430,
	-1, 464,
	104, 435,
	105, 435,
	-2, 433,
	-1, 486,
	147, 156,
	158, 156,
	-2, 430,
	-1, 487,
	104, 435,
	105, 435,
	147, 157,
	158, 157,
	-2, 433,
	-1, 493,
	146, 472,
	-2, 517,
	-1, 499,
	146, 472,
	-2, 518,
	-1, 521,
	78, 332,
	-2, 369,
	-1, 539,
	93, 135,
	94, 135,
	95, 135,
	-2, 0,
	-1, 551,
	147, 142,
	-2, 147,
	-1, 564,
	147, 142,
	-2, 147,
	-1, 581,
	144, 308,
	147, 308,
	-2, 430,
	-1, 582,
	104, 435,
	105, 435,
	144, 309,
	147, 309,
	-2, 433,
	-1, 682,
	78, 334,
	-2, 371,
	-1, 780,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 397,
	-1, 781,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 398,
	-1, 782,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 399,
	-1, 783,
	134, 0,
	135, 0,
	136, 0,
	137, 0,
	-2, 400,
	-1, 784,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 401,
	-1, 785,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 402,
	-1, 786,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 403,
	-1, 787,
	138, 0,
	139, 0,
	165, 0,
	166, 0,
	-2, 404,
	-1, 790,
	78, 333,
	-2, 370,
	-1, 840,
	37, 201,
	-2, 198,
	-1, 880,
	31, 128,
	32, 128,
	33, 128,
	143, 128,
	-2, 0,
	-1, 915,
	95, 140,
	-2, 0,
	-1, 917,
	31, 127,
	32, 127,
	33, 127,
	143, 127,
	-2, 0,
	-1, 944,
	93, 136,
	94, 136,
	95, 136,
	-2, 0,
	-1, 972,
	29, 189,
	-2, 4,
	-1, 981,
	147, 142,
	-2, 147,
	-1, 998,
	144, 193,
	-2, 195,
}

const yyPrivate = 57344

const yyLast = 8982

var yyAct = [...]int{

	102, 571, 844, 565, 1007, 966, 715, 61, 420, 827,
	123, 131, 919, 200, 340, 594, 567, 607, 452, 816,
	461, 808, 474, 735, 592, 684, 138, 140, 421, 142,
	145, 390, 39, 98, 444, 579, 264, 517, 118, 319,
	158, 315, 331, 330, 447, 7, 6, 544, 485, 130,
	2, 43, 26, 979, 960, 938, 228, 228, 162, 477,
	935, 942, 289, 941, 44, 670, 658, 664, 665, 672,
	673, 674, 675, 678, 679, 932, 822, 940, 658, 1003,
	251, 267, 738, 654, 258, 710, 662, 656, 655, 562,
	153, 658, 664, 665, 661, 654, 663, 657, 659, 660,
	676, 677, 666, 516, 298, 358, 325, 204, 654, 657,
	659, 660, 656, 655, 270, 736, 241, 137, 933, 794,
	954, 898, 657, 659, 660, 192, 311, 666, 729, 316,
	320, 955, 934, 323, 922, 899, 329, 854, 633, 5,
	543, 510, 126, 619, 121, 586, 121, 192, 586, 634,
	121, 658, 664, 665, 620, 511, 339, 141, 678, 679,
	585, 228, 159, 560, 114, 475, 179, 39, 654, 977,
	556, 586, 656, 655, 561, 310, 357, 115, 930, 162,
	432, 557, 657, 659, 660, 676, 677, 666, 179, 182,
	183, 718, 241, 267, 506, 228, 201, 178, 180, 181,
	908, 493, 296, 121, 359, 450, 595, 121, 507, 177,
	176, 229, 352, 355, 230, 907, 905, 104, 360, 178,
	180, 181, 862, 228, 175, 856, 270, 356, 117, 386,
	233, 425, 350, 658, 664, 665, 672, 673, 674, 675,
	678, 679, 312, 494, 792, 271, 351, 126, 746, 121,
	654, 1019, 640, 662, 656, 655, 313, 133, 272, 658,
	393, 661, 228, 663, 657, 659, 660, 676, 677, 666,
	456, 134, 301, 231, 231, 333, 654, 336, 300, 750,
	302, 612, 632, 717, 232, 232, 499, 611, 121, 120,
	631, 120, 126, 228, 121, 303, 423, 741, 265, 604,
	625, 624, 446, 241, 605, 1002, 595, 160, 978, 273,
	126, 597, 121, 596, 131, 396, 229, 931, 509, 230,
	473, 305, 513, 749, 294, 293, 521, 287, 440, 281,
	254, 253, 951, 451, 916, 233, 886, 451, 492, 463,
	39, 436, 437, 498, 491, 883, 541, 871, 120, 497,
	484, 472, 120, 7, 6, 658, 826, 271, 815, 521,
	502, 229, 486, 505, 230, 295, 728, 437, 436, 436,
	272, 437, 654, 584, 694, 635, 656, 655, 231, 229,
	233, 626, 230, 430, 399, 428, 657, 659, 660, 232,
	307, 666, 548, 546, 120, 914, 552, 593, 233, 1014,
	981, 572, 893, 572, 577, 572, 580, 139, 228, 297,
	265, 825, 231, 819, 126, 126, 121, 121, 451, 439,
	683, 273, 877, 232, 587, 588, 39, 564, 448, 297,
	810, 809, 192, 120, 551, 434, 400, 458, 537, 120,
	231, 449, 353, 344, 288, 278, 345, 5, 275, 274,
	250, 232, 539, 295, 222, 540, 616, 120, 196, 195,
	194, 144, 467, 122, 448, 492, 498, 453, 471, 448,
	581, 491, 497, 179, 479, 480, 1011, 449, 1010, 231,
	135, 495, 449, 229, 268, 1000, 230, 269, 990, 228,
	232, 985, 617, 615, 177, 176, 446, 984, 618, 704,
	705, 490, 233, 233, 178, 180, 181, 924, 316, 175,
	231, 913, 320, 309, 504, 308, 881, 521, 126, 812,
	400, 232, 704, 705, 682, 806, 521, 805, 799, 713,
	700, 547, 39, 521, 521, 521, 521, 521, 545, 542,
	501, 398, 348, 531, 91, 7, 6, 156, 636, 646,
	982, 649, 572, 906, 653, 711, 606, 701, 228, 228,
	228, 120, 120, 521, 1020, 572, 719, 976, 727, 39,
	39, 918, 892, 891, 889, 732, 531, 572, 580, 733,
	578, 306, 730, 197, 435, 267, 192, 228, 228, 714,
	125, 448, 448, 706, 179, 708, 740, 224, 225, 875,
	724, 831, 803, 804, 449, 449, 295, 518, 743, 731,
	811, 681, 734, 455, 613, 739, 742, 126, 270, 448,
	126, 737, 448, 424, 448, 231, 126, 179, 490, 228,
	745, 228, 449, 703, 446, 449, 232, 449, 259, 5,
	651, 755, 257, 438, 696, 697, 125, 610, 988, 688,
	124, 459, 648, 128, 129, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 790, 759, 521, 463, 573, 126, 757, 574,
	758, 515, 321, 295, 638, 639, 454, 721, 132, 486,
	642, 643, 260, 261, 800, 295, 231, 842, 793, 791,
	427, 521, 972, 843, 426, 304, 841, 232, 228, 848,
	849, 850, 847, 846, 845, 299, 126, 687, 126, 469,
	572, 817, 832, 865, 531, 282, 286, 572, 851, 820,
	512, 508, 259, 531, 295, 259, 829, 438, 814, 271,
	531, 531, 531, 531, 531, 322, 852, 833, 743, 317,
	448, 595, 272, 857, 859, 457, 468, 848, 849, 850,
	847, 846, 845, 449, 744, 231, 231, 231, 569, 570,
	531, 573, 263, 576, 574, 285, 232, 232, 232, 521,
	192, 504, 751, 295, 295, 521, 521, 573, 132, 404,
	574, 402, 265, 208, 231, 231, 260, 261, 295, 260,
	261, 876, 895, 273, 207, 232, 232, 986, 228, 828,
	228, 878, 824, 521, 884, 882, 572, 890, 885, 879,
	1008, 179, 182, 183, 801, 726, 45, 987, 189, 191,
	821, 559, 259, 901, 572, 904, 231, 438, 231, 338,
	1018, 39, 177, 176, 62, 54, 259, 232, 992, 232,
	888, 284, 178, 180, 181, 188, 190, 175, 228, 900,
	519, 521, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 923,
	909, 531, 958, 519, 446, 470, 260, 261, 796, 163,
	39, 226, 234, 521, 937, 813, 704, 705, 239, 285,
	260, 261, 855, 707, 704, 705, 880, 910, 531, 259,
	860, 861, 956, 521, 45, 231, 521, 874, 926, 521,
	453, 572, 963, 572, 971, 39, 232, 39, 610, 599,
	797, 601, 600, 897, 259, 39, 894, 39, 39, 283,
	259, 521, 550, 1004, 999, 256, 572, 971, 961, 936,
	957, 983, 902, 959, 39, 126, 962, 761, 39, 39,
	521, 760, 572, 723, 652, 994, 650, 572, 996, 647,
	998, 602, 469, 260, 261, 915, 514, 917, 980, 481,
	395, 324, 203, 39, 572, 1012, 531, 925, 202, 927,
	928, 1013, 531, 531, 199, 572, 1016, 993, 260, 261,
	920, 39, 136, 920, 260, 261, 1, 830, 748, 754,
	448, 864, 944, 445, 609, 231, 948, 231, 589, 949,
	531, 842, 590, 449, 591, 39, 232, 843, 232, 685,
	841, 39, 255, 946, 840, 995, 965, 964, 903, 483,
	896, 519, 839, 836, 566, 973, 1006, 1005, 725, 394,
	519, 389, 164, 341, 698, 538, 929, 519, 519, 519,
	519, 519, 290, 460, 161, 231, 157, 318, 531, 314,
	127, 403, 575, 401, 991, 335, 232, 945, 1009, 343,
	939, 848, 849, 850, 847, 846, 845, 519, 528, 608,
	997, 970, 969, 968, 967, 838, 169, 171, 170, 192,
	837, 835, 40, 568, 15, 14, 823, 720, 802, 1015,
	531, 695, 11, 686, 249, 75, 76, 116, 1021, 266,
	689, 690, 691, 692, 693, 64, 834, 89, 598, 90,
	531, 520, 101, 531, 74, 12, 531, 326, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 100,
	99, 79, 119, 810, 809, 526, 3, 41, 531, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 531, 0, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 0, 0, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 667, 668, 0, 0, 519, 0, 0, 0, 0,
	0, 0, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 789, 0,
	0, 686, 671, 670, 658, 664, 665, 672, 673, 674,
	675, 678, 679, 0, 0, 669, 667, 668, 870, 0,
	0, 654, 0, 680, 662, 656, 655, 0, 0, 0,
	0, 0, 661, 0, 663, 657, 659, 660, 676, 677,
	666, 0, 0, 519, 0, 0, 0, 0, 0, 519,
	519, 0, 0, 0, 0, 0, 0, 671, 670, 658,
	664, 665, 672, 673, 674, 675, 678, 679, 0, 0,
	0, 0, 31, 0, 0, 798, 654, 519, 680, 662,
	656, 655, 0, 0, 0, 0, 0, 661, 0, 663,
	657, 659, 660, 676, 677, 666, 147, 151, 155, 0,
	0, 0, 165, 0, 0, 0, 869, 0, 0, 51,
	198, 0, 872, 873, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 223, 0, 0, 0,
	235, 236, 237, 238, 192, 154, 240, 0, 242, 243,
	244, 245, 246, 247, 248, 0, 252, 0, 0, 0,
	0, 262, 205, 0, 0, 0, 276, 277, 0, 279,
	280, 0, 0, 0, 0, 227, 227, 519, 0, 0,
	291, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 0, 519, 911, 0,
	519, 0, 0, 519, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 240, 0, 0, 519, 0, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 519, 0, 0, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 387, 0, 155, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 671, 670, 658, 664,
	665, 672, 673, 674, 675, 678, 679, 0, 0, 0,
	0, 0, 0, 240, 0, 654, 433, 433, 662, 656,
	655, 0, 422, 441, 0, 0, 661, 0, 663, 657,
	659, 660, 676, 677, 666, 0, 0, 155, 465, 0,
	0, 466, 0, 0, 433, 0, 0, 0, 0, 0,
	433, 291, 0, 0, 0, 0, 433, 433, 0, 0,
	155, 443, 0, 433, 496, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 462, 464, 0, 0, 0, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 478, 95, 0, 0, 0, 487, 0, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 45, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 553, 81, 82, 0, 0, 0, 0,
	621, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 209, 0, 0, 0, 0, 0, 93,
	0, 555, 0, 0, 143, 113, 109, 103, 489, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 155, 912,
	0, 78, 42, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 667,
	668, 0, 0, 0, 0, 582, 0, 583, 0, 0,
	0, 0, 0, 0, 614, 92, 77, 0, 0, 0,
	0, 63, 482, 97, 0, 0, 488, 58, 57, 59,
	60, 73, 120, 0, 0, 0, 0, 0, 627, 629,
	671, 670, 658, 664, 665, 672, 673, 674, 675, 678,
	679, 668, 637, 0, 0, 0, 0, 0, 0, 654,
	0, 680, 662, 656, 655, 0, 0, 0, 0, 0,
	661, 0, 663, 657, 659, 660, 676, 677, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	0, 671, 670, 658, 664, 665, 672, 673, 674, 675,
	678, 679, 0, 0, 192, 342, 702, 0, 0, 0,
	654, 0, 680, 662, 656, 655, 0, 712, 0, 0,
	0, 661, 0, 663, 657, 659, 660, 676, 677, 666,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 558, 0, 433, 391, 716, 716,
	0, 669, 667, 668, 0, 173, 177, 176, 747, 0,
	0, 0, 0, 209, 433, 752, 178, 180, 181, 188,
	190, 175, 0, 155, 0, 0, 422, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 671, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 169, 171, 170, 192, 0, 0,
	462, 0, 654, 868, 680, 662, 656, 655, 478, 0,
	478, 0, 0, 661, 487, 663, 657, 659, 660, 676,
	677, 666, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 0, 0, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 807, 0, 0,
	863, 0, 0, 0, 0, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 0, 209, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 0, 0, 0, 0, 0,
	0, 853, 0, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 433, 433, 0, 0, 0, 818, 0, 866,
	0, 0, 0, 0, 0, 0, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 0, 4, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 349, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 342,
	209, 22, 0, 0, 0, 23, 24, 38, 45, 16,
	25, 36, 0, 0, 37, 10, 0, 27, 0, 32,
	81, 82, 8, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 716, 0, 422,
	9, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 645, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 4,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 16, 25, 36, 0, 0,
	37, 10, 0, 27, 0, 32, 81, 82, 8, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 9, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	503, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 4, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 16, 25, 36, 0, 0, 37, 10, 0, 27,
	0, 32, 81, 82, 8, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 9, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 1022, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 1017, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 1001, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 989, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	0, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 975,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 974, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 953, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 952, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	950, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 887, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 699, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 0, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 563, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 327, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	0, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 0, 35, 947, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	921, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 0, 35, 722, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 337, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	0, 35, 334, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 0, 35, 0, 63, 45, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 489, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 148, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 0, 0, 63, 45, 97,
	0, 0, 488, 58, 57, 59, 60, 73, 120, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 148, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 0, 0, 63, 45, 97,
	0, 0, 867, 58, 57, 59, 60, 73, 120, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 148, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 0, 0, 63, 45, 97,
	0, 0, 630, 58, 57, 59, 60, 73, 120, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 148, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 0, 0, 63, 45, 97,
	0, 0, 628, 58, 57, 59, 60, 73, 120, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 148, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 0, 0, 63, 45, 97,
	0, 0, 292, 58, 57, 59, 60, 73, 120, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 0, 0, 63, 431, 97,
	45, 0, 0, 58, 57, 59, 60, 73, 120, 0,
	0, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 407, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 388, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 152, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 150, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 146, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 442, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 169,
	171, 170, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 795, 0, 0, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 669, 667, 668, 0, 0, 0,
	0, 858, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 671, 670, 658, 664,
	665, 672, 673, 674, 675, 678, 679, 0, 0, 169,
	171, 170, 192, 0, 0, 654, 0, 680, 662, 656,
	655, 0, 0, 0, 0, 0, 661, 0, 663, 657,
	659, 660, 676, 677, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 169, 171, 170, 192, 0, 0, 0, 0,
	0, 0, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 0, 0, 0, 753, 169,
	171, 170, 192, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 709, 169, 171, 170, 192,
	0, 0, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 644, 169, 171, 170, 192, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 641,
	169, 171, 170, 192, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 169, 171, 170, 192, 0, 0, 0,
	623, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 169, 171, 170, 192,
	0, 0, 0, 622, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 603, 169, 171, 170, 192, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 169, 171, 170, 192,
	0, 554, 0, 0, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 169,
	171, 170, 192, 0, 0, 0, 0, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 0, 0,
	0, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 0, 0, 0, 0, 429,
	0, 0, 193, 173, 177, 176, 169, 171, 170, 192,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 169,
	171, 170, 192, 0, 0, 0, 0, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 169, 171, 170, 192, 397, 0, 0, 0,
	0, 0, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 169, 171, 170, 192, 347,
	0, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 169, 171,
	170, 192, 346, 0, 0, 0, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 667, 668,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 0,
	172, 0, 174, 178, 180, 181, 188, 190, 175, 671,
	670, 658, 664, 665, 672, 673, 674, 675, 678, 679,
	169, 171, 170, 192, 0, 0, 0, 0, 654, 0,
	680, 662, 656, 655, 0, 0, 0, 0, 0, 661,
	0, 663, 657, 659, 660, 676, 677, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 671, 670, 658, 664, 665, 672, 673, 674, 675,
	678, 679, 171, 170, 192, 0, 0, 0, 0, 0,
	654, 0, 680, 662, 656, 655, 0, 0, 0, 0,
	0, 661, 0, 663, 657, 659, 660, 676, 677, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 170, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 671, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 192, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 680, 662, 656, 655, 0, 0,
	0, 0, 0, 661, 0, 663, 657, 659, 660, 676,
	677, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	658, 664, 665, 672, 673, 674, 675, 678, 679, 192,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	662, 656, 655, 0, 0, 0, 0, 0, 0, 0,
	663, 657, 659, 660, 676, 677, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 177, 176, 0, 0, 0, 0, 0, 0, 0,
	174, 178, 180, 181, 188, 190, 175, 658, 664, 665,
	672, 673, 674, 675, 678, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 662, 656, 655,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 659,
	660, 676, 677, 666, 658, 664, 665, 672, 673, 674,
	675, 678, 679, 192, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 656, 655, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 659, 660, 676, 677,
	666, 105, 106, 126, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 105, 106, 126, 0, 0, 0,
	0, 0, 0, 0, 529, 177, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 180, 181, 188, 190,
	175, 0, 0, 524, 0, 527, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 522, 113, 109, 523, 524, 0, 527, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	530, 233, 0, 0, 0, 522, 113, 109, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 536,
	0, 525, 0, 0, 0, 535, 534, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 525, 0, 0, 0, 535, 534,
	532, 533,
}
var yyPact = [...]int{

	-1000, -1000, 2453, -1000, -1000, -1000, -1000, -1000, 317, 508,
	616, 113, -1000, 335, -1000, -1000, 1012, -1000, 261, 261,
	5561, 315, 261, 6773, 6663, 6553, 403, 150, 897, 6883,
	-1000, 8071, 314, 313, 312, -1000, 441, 6883, 1004, 45,
	998, 992, 6883, -1000, -1000, -1000, -1000, 762, -1000, 751,
	-1000, 1813, 308, 6883, 493, 404, 404, 6883, 6883, 6883,
	6883, -1000, -1000, 7103, -1000, 6883, 6883, 6883, 6883, 6883,
	6883, 6883, 304, 6883, -1000, 183, 182, 948, 6883, 725,
	405, 303, 302, 6883, 6883, 299, 6883, 6883, -1000, 181,
	-1000, -1000, 942, 844, -1000, 179, 298, 6111, -1000, 177,
	176, -1000, 283, 965, 647, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 130, 138, -1000, 637, 263, -1000,
	439, -1000, 243, 371, -1000, 965, -1000, 98, 677, 610,
	-1000, 726, 965, -1000, 991, -1000, -54, 4481, 5407, 7103,
	5253, 828, 45, 564, 6883, 301, -1000, 8018, -1000, 799,
	-1000, 7965, -1000, 398, 2010, 8163, -1000, 88, -1000, -1000,
	300, 69, 45, -55, 60, 8163, -1000, 6883, 6883, 6883,
	6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883,
	6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883,
	6883, 6883, 405, 6443, 404, 6883, 990, -1000, 7912, 397,
	374, -1000, 746, 744, -1000, 1813, 7859, -1000, -1000, 6333,
	6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883, 6883,
	6883, 6883, 237, -1000, -1000, -1000, -1000, -1000, 283, 541,
	965, 636, 632, -1000, -1000, 463, 463, 496, 463, 238,
	7792, 236, 463, 463, 463, 463, 463, 463, 463, -1000,
	6221, -1000, 463, 6883, 6883, 443, 733, 730, -1000, 271,
	6993, 404, 1334, 195, 263, 618, -1000, 524, 531, 965,
	708, 130, 138, 573, 6883, 6883, 8163, 8163, 6883, 8163,
	8163, 6883, 626, 733, 917, -1000, 830, 6883, 6111, 171,
	7, 7739, 404, 6883, 6883, 989, -1000, 1675, 283, 191,
	6883, 6883, 130, 439, 276, -1000, 6883, 396, -1000, -1000,
	2297, 283, -1000, 716, 50, -1000, 712, 965, -3, -1000,
	711, 965, 986, 662, -57, 8826, -1000, -1000, -1000, -1000,
	-1000, -1000, 292, -1000, -1000, -1000, -1000, -1000, 261, 290,
	395, -18, 8163, -1000, 394, 387, -1000, -1000, -1000, -1000,
	-1000, 150, -1000, 6883, -1000, -1000, 950, 288, 8826, -1000,
	6883, 8432, 8482, 8254, 1334, 8305, 8569, 8693, 1814, 35,
	35, 35, 496, 463, 496, 496, 342, 342, 700, 700,
	700, 700, 57, 57, 57, 57, -1000, 7686, 6883, 23,
	-1000, -1000, 1925, 812, 16, -71, 4325, -1000, -1000, 281,
	718, 727, 607, 438, 607, 6883, 1334, 282, 1334, 1334,
	1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334,
	13, -1000, -1000, 278, 965, 283, 195, 195, 249, -1000,
	-1000, -1000, 164, 8163, 162, -1000, -1000, -1000, -1000, 939,
	981, 7629, 156, 413, 263, 139, -1000, -1000, 130, 138,
	-1000, 6883, -1000, -1000, 134, 965, 524, 195, 130, 134,
	-4, -1000, 1813, -1000, 1583, 7576, 7523, 152, -1000, -1000,
	-1000, 151, 234, -1000, -1000, 6001, 5891, -1000, -1000, 141,
	133, -1000, -1000, -9, 228, -1000, -1000, 1813, 404, 6883,
	-1000, 263, 263, -1000, -1000, 103, 7466, 263, 263, -1000,
	7409, -1000, 2141, -1000, -1000, -1000, -1000, 677, 979, 623,
	-1000, 610, 976, 611, -1000, 974, 8826, -1000, 8110, -1000,
	-1000, 524, 529, 965, 274, 8826, -1000, -1000, -1000, -1000,
	710, 571, 8826, 8826, 8826, 8826, 8826, 227, 551, 4637,
	4169, 386, 6883, 6883, 490, -1000, 892, -1000, -1000, 7352,
	-75, 718, -1000, 8163, 6883, 8394, 385, 404, 132, 132,
	5099, 973, 8826, 794, 718, 219, -30, -1000, 45, -1000,
	-1000, -1000, 524, 527, 965, 437, 607, -1000, -1000, -43,
	-1000, -1000, 1813, -1000, 405, -78, 237, 237, 283, -1000,
	-1000, 149, 704, 6883, -1000, 195, -1000, -1000, 99, -1000,
	-1000, -1000, -1000, -1000, -1000, 6883, -1000, -1000, 175, 131,
	-1000, 6883, 6883, 130, 7295, -1000, 524, -1000, -1000, -1000,
	6883, -1000, -1000, -1000, -1000, -1000, -1000, 7242, 404, 8163,
	404, -1000, -1000, -1000, 5671, -1000, -1000, 8163, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 971, -1000,
	-1000, 967, -1000, -1000, 8826, 8826, 8826, 8826, 8826, 8826,
	8826, 8826, 8826, 8826, 8826, 8826, 8826, 8826, 8826, 8826,
	8826, 8826, 8826, 8826, 8826, 8826, 8826, 8826, 8826, 8826,
	8803, 965, 524, 8826, 95, -39, 7187, 654, 898, 128,
	128, -53, -53, 1218, 384, -1000, 261, 5561, 509, 383,
	-1000, 381, 8163, -1000, 6883, 286, 467, 375, 884, -1000,
	8826, 211, 8394, -1000, -1000, 673, -1000, 404, 267, 673,
	-1000, -1000, -1000, -84, -1000, 780, 265, 209, 775, 718,
	518, 965, 524, -1000, -43, 1003, 607, 263, 6883, -1000,
	-10, 6883, 704, -1000, 76, 263, -1000, 7132, 704, 6883,
	6883, 73, 1927, -1000, 676, -1000, 5781, -1000, -1000, -1000,
	-1000, -1000, 1874, -53, -53, 128, 128, 128, 128, 8519,
	8643, 8606, 224, 224, -53, 1762, 8344, 8202, 102, -65,
	20, 20, 20, 20, -40, -40, -40, -40, 8826, 1163,
	524, 200, -1000, -1000, 8826, 8826, -1000, -1000, -1000, -1000,
	5561, -1000, 504, 261, 277, -1000, 6883, 1029, -1000, -1000,
	-1000, -1000, -1000, 372, -1000, 775, 198, 132, -1000, 237,
	189, 4013, 8826, -1000, 432, 607, 431, 430, 256, -1000,
	944, -1000, 524, 669, -1000, -1000, 941, -23, -1000, 799,
	621, -1000, 962, 607, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1334, -1000, 67, -1000, -1000, 410, -1000,
	66, 51, -1000, -1000, -1000, 195, 8163, 404, -1000, 1467,
	8826, -1000, 1711, 8110, -1000, 367, 250, -1000, 187, -1000,
	4637, -1000, 429, 4945, -1000, -13, 4945, 363, -1000, -1000,
	926, -1000, -1000, 166, -85, -1000, -26, -100, -1000, 959,
	45, -1000, -105, -81, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1467, 8826, -1000, -1000, 4637, 4791, 4637, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3857, 185, 3701, 3545, -27,
	-1000, 920, 8826, -1000, 890, 8826, -106, 958, 8826, -1000,
	607, -1000, 702, 8110, 4637, -1000, -1000, -1000, 3389, 3233,
	-1000, 425, -1000, -1000, -1000, 157, -1000, -1000, -107, -1000,
	8826, 254, -1000, -1000, 407, 702, -1000, 353, 347, 772,
	808, 570, -1000, 3077, -1000, 344, -1000, -1000, 846, 8826,
	-1000, 718, -1000, -1000, -1000, -1000, 607, 621, 954, 341,
	-1000, 2921, -1000, -1000, 158, -79, -1000, 953, -1000, -1000,
	-1000, 789, 334, 607, -1000, -1000, 789, -1000, 253, -1000,
	-1000, -1000, -1000, -1000, 607, 2765, 838, -1000, 104, 422,
	-1000, 2609, -1000,
}
var yyPgo = [...]int{

	0, 29, 1177, 22, 21, 1176, 49, 41, 39, 544,
	1175, 1172, 164, 217, 228, 180, 1362, 64, 51, 59,
	855, 1399, 1171, 33, 1170, 1169, 1157, 136, 1155, 40,
	37, 1154, 1152, 1151, 1149, 84, 1148, 1147, 20, 1145,
	28, 44, 38, 1139, 854, 36, 1137, 1, 1136, 1135,
	7, 1134, 52, 43, 42, 1132, 1131, 1128, 31, 1127,
	1126, 4, 1125, 1124, 1123, 16, 1122, 1121, 1120, 1115,
	48, 5, 1114, 1113, 1112, 1111, 1110, 2, 1109, 607,
	1108, 18, 202, 1100, 1099, 1098, 12, 1097, 1095, 6,
	19, 1093, 1092, 1091, 9, 50, 0, 1090, 1089, 1087,
	117, 1086, 1084, 642, 1083, 1082, 62, 8, 1076, 1075,
	1074, 1073, 14, 47, 1072, 1071, 1069, 1068, 1067, 1066,
	3, 1064, 23, 1063, 1062, 1060, 35, 1059, 1058, 1057,
	1056, 1055, 1054, 1052, 25, 1049, 1044, 1042, 24, 1038,
	15, 17, 1034, 34, 1033, 1031, 1029, 1028, 177, 13,
	1027, 1026,
}
var yyR1 = [...]int{

	0, 151, 95, 95, 96, 96, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 97, 97,
	6, 6, 6, 6, 98, 98, 7, 7, 7, 7,
	99, 99, 8, 8, 8, 8, 55, 55, 100, 100,
	26, 26, 26, 26, 26, 27, 27, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 117, 117, 60, 60, 118,
	118, 119, 119, 61, 115, 115, 58, 53, 54, 149,
	149, 150, 150, 62, 63, 63, 66, 66, 66, 66,
	91, 91, 2, 93, 93, 92, 92, 126, 126, 90,
	90, 89, 89, 89, 87, 87, 86, 86, 59, 59,
	116, 116, 84, 84, 84, 84, 113, 113, 113, 4,
	4, 88, 88, 109, 109, 110, 110, 56, 56, 57,
	57, 120, 120, 121, 121, 65, 65, 64, 64, 64,
	64, 82, 82, 82, 127, 127, 70, 70, 70, 70,
	101, 101, 29, 29, 29, 102, 102, 102, 102, 122,
	122, 67, 67, 67, 67, 69, 128, 128, 83, 83,
	129, 129, 130, 130, 71, 71, 72, 131, 131, 75,
	75, 74, 73, 73, 76, 76, 85, 85, 123, 123,
	124, 124, 132, 132, 77, 77, 77, 77, 77, 77,
	125, 125, 125, 125, 68, 68, 114, 114, 112, 112,
	111, 111, 138, 138, 136, 136, 137, 137, 137, 139,
	139, 44, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 52, 52, 52, 52,
	49, 49, 49, 49, 48, 48, 1, 94, 94, 108,
	108, 108, 108, 25, 25, 25, 25, 25, 25, 25,
	25, 13, 13, 13, 13, 47, 47, 47, 45, 45,
	43, 43, 146, 146, 145, 51, 51, 51, 133, 133,
	133, 81, 81, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 30, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	37, 37, 37, 37, 31, 31, 31, 31, 31, 31,
	31, 134, 134, 3, 3, 135, 135, 135, 135, 16,
	16, 50, 50, 18, 19, 20, 21, 21, 147, 147,
	140, 142, 142, 78, 141, 141, 141, 42, 42, 46,
	46, 14, 24, 24, 22, 22, 22, 23, 23, 23,
	12, 12, 12, 11, 11, 15, 15, 143, 143, 144,
	144, 144, 41, 41, 148, 148, 107, 107, 40, 40,
	40, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 103, 103, 103, 103, 35, 35, 35, 35, 35,
	35, 35, 36, 36, 36, 39, 39, 39, 39, 39,
	39, 39, 39, 104, 104, 38, 38, 32, 32, 33,
	34,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 4, 2, 3, 1,
	1, 3, 2, 4, 3, 1, 1, 3, 2, 4,
	3, 1, 1, 3, 2, 4, 5, 4, 2, 0,
	1, 1, 1, 1, 4, 1, 2, 3, 5, 8,
	3, 5, 9, 3, 2, 3, 2, 3, 2, 3,
	3, 2, 3, 3, 3, 1, 2, 5, 8, 8,
	5, 1, 6, 3, 3, 0, 9, 0, 4, 1,
	0, 1, 2, 8, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 9, 7, 6, 1, 2, 1, 2,
	0, 2, 1, 0, 2, 0, 2, 1, 3, 0,
	2, 1, 2, 4, 1, 4, 1, 4, 1, 4,
	3, 5, 3, 4, 4, 5, 0, 5, 4, 1,
	1, 1, 4, 0, 4, 0, 5, 0, 2, 0,
	3, 1, 0, 1, 3, 4, 6, 0, 1, 1,
	1, 2, 3, 3, 1, 3, 1, 1, 2, 2,
	3, 1, 1, 2, 4, 3, 5, 1, 3, 2,
	0, 3, 2, 1, 8, 3, 1, 3, 1, 3,
	0, 1, 1, 2, 2, 2, 3, 1, 3, 1,
	1, 3, 4, 3, 0, 1, 1, 3, 1, 1,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 5, 4, 3, 1, 0, 1,
	3, 1, 2, 1, 4, 3, 2, 1, 1, 0,
	1, 3, 6, 3, 4, 6, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 4, 5, 4, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 9, 10, 2, 2, 4, 4,
	4, 4, 4, 4, 4, 3, 1, 0, 4, 3,
	4, 1, 2, 2, 4, 3, 4, 4, 4, 4,
	2, 1, 1, 3, 2, 1, 3, 2, 1, 1,
	4, 1, 2, 0, 2, 0, 2, 1, 0, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 1,
	3, 2, 4, 3, 1, 1, 1, 4, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 2, 2, 3,
	1, 1, 3, 2, 1, 1, 1, 1, 3, 3,
	1, 0, 2, 0, 1, 5, 3, 3, 1, 1,
	1, 3, 3, 1, 1, 1, 5, 1, 2, 0,
	3, 4, 4, 1, 1, 1, 0, 1, 2, 3,
	3, 1, 4, 4, 1, 1, 1, 1, 2, 1,
	4, 4, 1, 1, 4, 0, 1, 1, 1, 4,
	4, 1, 1, 3, 1, 2, 3, 1, 1, 4,
	0, 0, 2, 5, 3, 3, 1, 6, 4, 4,
	2, 2, 2, 1, 2, 1, 4, 3, 3, 3,
	6, 3, 1, 1, 1, 4, 4, 4, 2, 2,
	4, 2, 2, 1, 3, 1, 1, 3, 3, 3,
	3,
}
var yyChk = [...]int{

	-1000, -151, -95, -5, 2, -27, -53, -54, 51, 79,
	44, -55, -28, 10, -62, -63, 38, 142, 7, 21,
	20, 23, 30, 34, 35, 39, -52, 46, 98, 19,
	14, -16, 48, 25, 27, 144, 40, 43, 36, -1,
	-66, -2, 97, -18, -17, 37, 52, 99, 53, 100,
	54, -21, 59, 92, -20, 104, 105, 153, 152, 154,
	155, -50, -44, 146, -39, 107, 108, 109, 110, 111,
	112, 113, 6, 156, -31, -49, -48, 141, 96, -22,
	91, 49, 50, 4, 5, 84, 85, 86, 11, -37,
	-34, -9, 140, 74, 62, 18, 60, 148, -23, -24,
	-25, -32, -96, 82, -13, 8, 9, 66, 67, 81,
	63, 64, 65, 80, -12, -148, -46, -14, -42, -11,
	157, 12, 146, -96, 142, 82, 10, -97, 37, 38,
	-6, -96, 82, 144, 158, 145, 10, -100, -50, 146,
	-50, -27, -1, 79, 146, -50, 144, -16, 97, 98,
	144, -16, 144, -17, -21, -16, 144, -101, -29, 12,
	157, -102, -1, 12, -114, -16, 144, 129, 130, 87,
	89, 88, 159, 151, 161, 167, 153, 152, 162, 131,
	163, 164, 132, 133, 134, 135, 136, 137, 165, 138,
	166, 139, 90, 150, 146, 146, 146, 142, -16, 10,
	-149, 151, 10, 10, -17, -21, -16, 52, 52, 160,
	117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
	127, 128, 146, -16, 104, 105, -20, -21, -96, 79,
	82, -13, -14, 98, -20, -16, -16, -16, -16, -44,
	-16, -52, -16, -16, -16, -16, -16, -16, -16, -51,
	146, -50, -16, 148, 148, -133, 17, -103, -35, 12,
	76, 77, -16, 57, -45, -13, -43, -96, 79, 82,
	-23, -12, -148, -14, 146, 146, -16, -16, 146, -16,
	-16, 148, -103, 17, 17, 75, -103, 148, 146, -106,
	-105, -16, 151, 148, 148, 82, -82, 146, -96, 78,
	148, 142, -12, 157, 78, -82, 142, 147, 144, 142,
	-95, -96, 144, 158, -98, -7, -96, 82, -99, -8,
	-96, 82, 29, -96, 10, 160, -26, 143, 2, -27,
	-53, -54, 51, -27, 145, -88, -27, 145, 21, -149,
	-112, -111, -16, -84, 142, 145, 144, 144, 144, 144,
	144, 158, -18, 142, -21, 144, 158, -149, 160, 144,
	158, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -45, -16, 145, -115,
	-58, -21, -21, -17, -116, 10, -100, 144, 144, 10,
	146, -91, 55, -93, 55, 58, -16, 151, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-107, -40, -21, 59, 82, -96, 78, 78, 147, 147,
	147, 147, -15, -16, -15, 141, -35, -35, 17, 148,
	57, -16, 11, -21, -143, -144, -42, -41, -12, -148,
	10, 142, -81, -82, 78, 82, -96, 57, -12, 78,
	-104, -38, -21, -17, -21, -16, -16, -15, 140, 75,
	75, -15, -106, 149, -3, 158, 58, -19, -21, -15,
	-15, 10, 147, -127, -52, -70, -17, -21, 151, 83,
	-82, -41, -42, 10, 52, -15, -16, -41, -42, 10,
	-16, 144, -95, 143, -82, -6, 144, 158, 29, -96,
	144, 158, 29, -96, 10, 29, 160, -30, -79, -9,
	-33, -96, 79, 82, 60, 148, -10, 62, -80, 18,
	74, -13, 154, 155, 153, 152, 146, 146, -109, -100,
	-100, -50, 144, 158, -113, 144, -113, 144, -29, -16,
	12, 146, -30, -16, 145, -16, 147, 158, 29, 29,
	147, 158, 160, 143, 146, -120, -121, -65, -64, 60,
	61, -47, -96, 79, 82, -92, 56, -47, 142, -126,
	-47, -17, -21, -21, 91, 147, 158, 146, -96, -139,
	-137, -136, -138, 148, -140, 57, 149, 149, -36, 10,
	13, 12, 10, 143, 143, 148, 143, -141, -78, -142,
	-82, 148, 142, -12, -16, -42, -96, -143, -42, 147,
	158, 147, 147, 147, 149, 149, 147, -16, 151, -16,
	151, 149, 149, 147, 158, 147, -19, -16, -82, -82,
	149, 143, -82, -82, 143, 143, -7, 10, 29, -8,
	10, 29, 10, -30, 148, 153, 152, 162, 131, 163,
	164, 159, 151, 161, 132, 133, 167, 88, 89, 87,
	130, 129, 134, 135, 136, 137, 165, 166, 138, 139,
	150, 82, -96, 146, -134, -135, -79, 17, 78, -79,
	-79, -79, -79, -79, 147, -56, 93, 94, -110, 22,
	144, -112, -16, 143, 32, 33, -113, 31, -113, 143,
	160, -120, -16, 144, -58, -89, -21, 151, 59, -89,
	-59, -27, 145, 10, -30, -117, 41, -120, 147, 158,
	-149, 82, -96, 142, -126, -122, 158, -45, 160, -40,
	-107, 148, -138, -140, -15, -143, 149, -16, -147, 148,
	148, -15, -16, 143, -146, -38, 58, -19, -19, -70,
	10, 10, -79, -79, -79, -79, -79, -79, -79, -79,
	-79, -79, -79, -79, -79, -79, -79, -79, -79, -79,
	-79, -79, -79, -79, -79, -79, -79, -79, 145, -79,
	-96, -134, 149, -3, 158, 58, 10, 52, 147, 144,
	-50, -27, -57, 93, 94, 144, 144, -16, -4, 145,
	144, 143, 144, 31, -30, 147, -90, 58, -21, 146,
	-90, -100, 160, -60, 42, 146, 147, -94, 44, -65,
	-150, 83, -96, -122, 143, -67, -123, -68, -69, -124,
	-132, 47, 38, 44, -77, 103, 102, 101, 98, 99,
	100, -47, -81, -16, 147, -15, 149, -141, 149, -140,
	-15, -15, 149, 143, -145, 57, -16, 151, 149, -79,
	145, 147, -79, -79, -27, 95, -50, 145, -112, -4,
	-100, 144, -94, 147, -89, -107, 147, 28, -30, 142,
	-47, 142, 142, 146, 12, 143, -125, 12, 144, 158,
	-1, -77, 10, -128, -47, 149, 143, 149, 149, -143,
	-19, -79, 58, 144, 145, -100, 147, -100, 142, -86,
	-27, 145, 147, -86, 144, -100, 12, -100, -100, -108,
	12, 151, 160, 144, 158, 160, 10, -149, 160, -83,
	158, 144, 142, -79, -100, -87, -27, 145, -100, -100,
	143, 147, 143, 143, 147, 158, 12, -30, 12, -30,
	160, 10, -30, -47, -129, -130, -71, -72, -73, -74,
	-75, -47, 10, -100, 143, 26, 142, 12, 151, 160,
	-30, 146, 143, -71, 144, 144, 45, 29, 78, 24,
	144, -100, 12, -30, -120, -131, -47, -76, -77, 10,
	144, 143, 147, 158, 10, -118, -119, -61, 41, -85,
	144, 142, -47, -61, 146, -100, -47, 143, 12, 147,
	142, -100, 143,
}
var yyDef = [...]int{

	3, -2, -2, 2, 6, 7, 8, 9, 0, 0,
	0, 0, 45, 4, 87, 88, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	65, 0, 0, 0, 0, 71, 0, 0, 0, 89,
	0, 0, 303, 429, 430, 316, 96, 0, 98, 0,
	102, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 298, 299, 300, 348, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	416, 417, 0, 0, 420, 355, 0, 481, 454, 455,
	456, 410, -2, 0, 0, 353, 354, 356, 357, 358,
	359, 360, 361, 362, -2, 0, 459, 0, 0, 462,
	474, 463, 0, 0, 3, 0, 4, 0, 0, 0,
	19, 20, 0, 17, 0, 46, 0, 0, 0, 0,
	0, 0, 89, 0, 218, 0, 54, 0, 303, 331,
	56, 0, 58, 430, -2, 0, 61, 0, 161, 162,
	0, 0, 89, 167, 0, 217, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	0, 90, 100, 103, -2, -2, 0, 97, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 236, 249, 251, 250, 435, 332, 0,
	0, 0, 0, 331, 252, 270, 271, 272, 273, 284,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 296,
	0, 347, 297, 465, 465, 0, 349, 350, 493, 495,
	0, 0, 302, 0, 351, 338, 339, 332, 0, 0,
	341, -2, 0, 0, 0, 0, 508, 509, 0, 511,
	512, 465, 0, 0, 0, 364, 0, 465, 481, 0,
	423, 486, 0, 465, 465, 0, 323, 0, -2, 0,
	465, 0, -2, 475, 0, 330, 0, 0, 11, 3,
	0, -2, 14, 0, 0, 25, 26, 0, 0, 31,
	32, 0, 0, 22, 0, 0, 38, 47, 40, 41,
	42, 43, 0, 133, 39, 50, 131, 39, 0, 0,
	0, 219, 221, 53, 126, 126, 55, 57, 59, 60,
	62, 0, 163, 0, 433, 63, 0, 0, 0, 64,
	0, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, -2, -2,
	-2, -2, -2, -2, -2, -2, 282, 0, 0, 0,
	84, 86, -2, 430, 0, 0, 0, 73, 74, 0,
	-2, 105, 0, 0, 0, 0, 233, 0, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	0, 477, 478, 0, 0, 334, 0, 0, 229, 431,
	432, 346, 0, 466, 0, 301, 494, 491, 492, 0,
	0, 0, 414, 0, 446, 467, 468, 471, 447, 0,
	472, 0, 231, 352, 0, 0, 334, 0, 458, 0,
	0, 513, -2, -2, -2, 0, 0, 0, 418, 363,
	419, 0, 0, 315, 482, 424, 0, 490, 434, 0,
	0, 5, 151, 0, 0, 154, -2, -2, 0, 0,
	325, 0, 449, -2, 520, 0, 0, 0, 450, -2,
	0, 10, 0, 13, 324, 18, 15, 0, 0, 28,
	16, 0, 0, 34, 21, 0, 0, 37, 366, 367,
	368, -2, 0, 0, 0, 421, 374, 375, 376, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 137, -2,
	0, 0, 218, 0, 0, 126, 0, 126, 160, 0,
	165, -2, 168, 216, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 75, -2, 0, 141, 143, 89, 148,
	149, 150, 335, 0, 0, 0, 0, 101, 170, 104,
	107, -2, -2, 234, 0, 0, 480, 480, 333, 285,
	230, 227, 228, 465, 223, 0, 311, 310, 0, 502,
	503, 504, 497, 498, 499, 0, 501, 439, 444, 445,
	443, 465, 0, 448, 0, 449, 333, 343, 450, 505,
	0, 506, 507, 510, 313, 312, 314, 484, 0, 485,
	0, 452, 453, 152, 0, 153, 158, 159, 326, 327,
	460, 461, 328, 329, 464, 12, 24, 27, 0, 30,
	33, 0, 23, 36, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 421, 0, 423, 428, 0, 0, 384,
	385, 407, 408, 0, 0, 48, 0, 0, 139, 0,
	51, 0, 220, 122, 0, 0, 0, 0, 0, 164,
	0, 0, 286, 67, 85, 109, 111, 0, 0, 109,
	70, 118, 39, 0, 120, 77, 0, 0, 317, 147,
	91, 0, 337, 170, 106, 200, 0, 351, 0, 476,
	0, 465, 226, 222, 0, 446, 496, 0, 436, 465,
	465, 0, 0, 473, 340, 514, 0, 488, 489, 155,
	29, 35, 0, 378, 379, 380, 381, 382, 383, 386,
	387, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 0,
	-2, 0, 373, 422, 424, 0, 365, 519, 409, 44,
	0, 138, 0, 0, 0, 132, 218, 0, 39, 129,
	130, 123, 124, 0, 166, 317, 0, 0, 112, 480,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 144,
	0, 92, 336, 200, 95, 169, 0, 0, 173, 0,
	-2, 199, 0, 0, 202, 204, 205, 206, 207, 208,
	209, 108, 235, 232, 479, 0, 225, 440, 0, 438,
	0, 0, 469, 470, 342, 0, 483, 0, 377, 405,
	0, 372, 426, 427, 134, 0, 0, 39, 0, 39,
	-2, 125, 0, 0, 110, 0, 0, 0, 121, 39,
	0, 39, 39, 0, 145, 94, 0, 212, 172, 0,
	89, 203, 0, 0, 176, 224, 500, 442, 441, 344,
	487, 406, 0, 49, 39, -2, 0, -2, 39, 68,
	116, 39, 113, 69, 119, 0, 0, 0, 0, 0,
	321, 0, 0, 171, 0, 0, 0, 0, 0, 175,
	0, 178, 180, 425, -2, 52, 114, 39, 0, 0,
	78, 0, 93, 304, 318, 0, 322, 146, 210, 213,
	0, 0, 215, 177, 0, 181, 182, 0, 0, 190,
	0, 0, -2, 0, 305, 0, 39, 319, 0, 0,
	214, -2, 179, 183, 184, 185, 0, 194, 0, 0,
	117, 0, 320, 211, 0, 186, 187, 0, -2, 191,
	115, 80, 0, 0, 192, 76, 79, 81, 0, 174,
	196, 39, 188, 82, 0, 0, 0, 197, 0, 0,
	39, 0, 83,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 154, 140, 3, 157, 164, 151, 3,
	146, 147, 162, 153, 158, 152, 167, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 145, 144,
	165, 160, 166, 150, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 148, 3, 149, 161, 3, 141, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 159, 143, 155,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:281
		{
			yylex.(*Parser).rootNode = node.NewRoot(yyDollar[1].list)
			yylex.(*Parser).positions.AddPosition(yylex.(*Parser).rootNode, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:289
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:294
		{
			yyVAL.list = []node.Node{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:299
		{
			namePart := name.NewNamePart(yyDollar[1].token.Value)
			yyVAL.list = []node.Node{namePart}

			// save position
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(namePart, yyDollar[1].token, comment.StringToken)
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:310
		{
			namePart := name.NewNamePart(yyDollar[3].token.Value)
			yyVAL.list = append(yyDollar[1].list, namePart)

			// save position
			yylex.(*Parser).positions.AddPosition(namePart, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(namePart, yyDollar[3].token, comment.StringToken)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:325
		{
			// error
			yyVAL.node = nil
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:330
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:332
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:334
		{
			yyVAL.node = yyDollar[1].node
		}
	case 10:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:336
		{
			yyVAL.node = stmt.NewHaltCompiler()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.HaltCompilerToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:349
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewNamespace(name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 12:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:362
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewNamespace(name, yyDollar[4].list)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseCurlyBracesToken)
		}
	case 13:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:376
		{
			yyVAL.node = stmt.NewNamespace(nil, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 14:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:388
		{
			yyVAL.node = stmt.NewUseList(nil, yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:399
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(useType, yyDollar[2].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 16:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:413
		{
			useType := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewUseList(useType, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(useType, yyDollar[2].token, comment.UseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 17:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:427
		{
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:440
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:447
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:452
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 21:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:461
		{
			name := name.NewName(yyDollar[1].list)
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[3].token, comment.StringToken)
		}
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:476
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 23:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:488
		{
			name := name.NewName(yyDollar[2].list)
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.StringToken)
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:507
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:514
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:519
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 27:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:528
		{
			name := name.NewName(yyDollar[1].list)
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[3].token, comment.StringToken)
		}
	case 28:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:543
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 29:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:555
		{
			name := name.NewName(yyDollar[2].list)
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.StringToken)
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:574
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:581
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:586
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:595
		{
			name := name.NewName(yyDollar[1].list)
			alias := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[3].token, comment.StringToken)
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:610
		{
			name := name.NewName(yyDollar[2].list)
			yyVAL.node = stmt.NewUse(nil, name, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:622
		{
			name := name.NewName(yyDollar[2].list)
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewUse(nil, name, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.StringToken)
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:641
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			constList := yyDollar[1].node.(*stmt.ConstList)
			constList.Consts = append(constList.Consts, constant)
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(constList.Consts), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[4].token, comment.EqualToken)
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:659
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			constList := []node.Node{constant}
			yyVAL.node = stmt.NewConstList(constList)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ConstToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[3].token, comment.EqualToken)
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:679
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:685
		{
			yyVAL.list = []node.Node{}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:691
		{
			// error
			yyVAL.node = nil
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:696
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:698
		{
			yyVAL.node = yyDollar[1].node
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:700
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:702
		{
			yyVAL.node = stmt.NewHaltCompiler()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.HaltCompilerToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:719
		{
			yyVAL.node = yyDollar[1].node
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:721
		{
			label := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewLabel(label)

			// save position
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(label, yyDollar[1].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ColonToken)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:737
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:748
		{
			yyVAL.node = stmt.NewIf(yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node)

			// save position
			if yyDollar[5].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))
			} else if len(yyDollar[4].list) > 0 {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IfToken)
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:764
		{
			stmts := stmt.NewStmtList(yyDollar[4].list)
			yyVAL.node = stmt.NewAltIf(yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node)

			// save position
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[4].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IfToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.EndifToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.SemiColonToken)
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:779
		{
			switch n := yyDollar[3].node.(type) {
			case *stmt.While:
				n.Cond = yyDollar[2].node
			case *stmt.AltWhile:
				n.Cond = yyDollar[2].node
			}

			yyVAL.node = yyDollar[3].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.WhileToken)
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:796
		{
			yyVAL.node = stmt.NewDo(yyDollar[2].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.WhileToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.SemiColonToken)
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:808
		{
			switch n := yyDollar[9].node.(type) {
			case *stmt.For:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			case *stmt.AltFor:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			}

			yyVAL.node = yyDollar[9].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ForToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.ForInitSemicolonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.ForCondSemicolonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.CloseParenthesisToken)
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:833
		{
			switch n := yyDollar[3].node.(type) {
			case *stmt.Switch:
				n.Cond = yyDollar[2].node
			case *stmt.AltSwitch:
				n.Cond = yyDollar[2].node
			default:
				panic("unexpected node type")
			}

			yyVAL.node = yyDollar[3].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SwitchToken)
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:852
		{
			yyVAL.node = stmt.NewBreak(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BreakToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:863
		{
			yyVAL.node = stmt.NewBreak(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BreakToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:874
		{
			yyVAL.node = stmt.NewContinue(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ContinueToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:885
		{
			yyVAL.node = stmt.NewContinue(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ContinueToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:896
		{
			yyVAL.node = stmt.NewReturn(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ReturnToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:907
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ReturnToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:918
		{
			yyVAL.node = stmt.NewReturn(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ReturnToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:929
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:939
		{
			yyVAL.node = stmt.NewGlobal(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.GlobalToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:950
		{
			yyVAL.node = stmt.NewStatic(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:961
		{
			yyVAL.node = stmt.NewEcho(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EchoToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:972
		{
			yyVAL.node = stmt.NewInlineHtml(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.InlineHTMLToken)
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:982
		{
			yyVAL.node = stmt.NewExpression(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:992
		{
			yyVAL.node = stmt.NewUnset(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UnsetToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.SemiColonToken)
		}
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1005
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				}
			}

			yyVAL.node = yyDollar[8].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ForeachToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseParenthesisToken)
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1040
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Variable = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *stmt.Foreach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				case *stmt.AltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Variable = yyDollar[6].node
				}
			}

			// save position
			yyVAL.node = yyDollar[8].node

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ForeachToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseParenthesisToken)
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1075
		{
			yyVAL.node = stmt.NewDeclare(yyDollar[3].list, yyDollar[5].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DeclareToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1087
		{
			yyVAL.node = stmt.NewNop()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SemiColonToken)
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1097
		{
			yyVAL.node = stmt.NewTry(yyDollar[3].list, yyDollar[5].list, yyDollar[6].node)

			// save position
			if yyDollar[6].node == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TryToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1113
		{
			yyVAL.node = stmt.NewThrow(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ThrowToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1124
		{
			label := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewGoto(label)

			// save position
			yylex.(*Parser).positions.AddPosition(label, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.GotoToken)
			yylex.(*Parser).comments.AddFromToken(label, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1141
		{
			yyVAL.list = []node.Node{}
		}
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:1143
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			catch := stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)
			yyVAL.list = append([]node.Node{catch}, yyDollar[9].list...)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(catch, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[1].token, comment.CatchToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[5].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[6].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(catch, yyDollar[8].token, comment.CloseCurlyBracesToken)
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1165
		{
			yyVAL.node = nil
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1167
		{
			yyVAL.node = stmt.NewFinally(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FinallyToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1182
		{
			yyVAL.list = yyDollar[1].list
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1184
		{
			yyVAL.list = []node.Node{}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1189
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1191
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:1196
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			yyVAL.node = stmt.NewCatch([]node.Node{yyDollar[3].node}, variable, yyDollar[7].list)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.CatchToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.CloseCurlyBracesToken)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1218
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1220
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1230
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1235
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1240
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1245
		{
			yyVAL.token = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1247
		{
			yyVAL.token = yyDollar[1].token
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1252
		{
			yyVAL.token = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1254
		{
			yyVAL.token = yyDollar[1].token
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:1259
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewFunction(name, yyDollar[2].token != nil, yyDollar[5].list, nil, yyDollar[8].list, "")

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FunctionToken)
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[9].token, comment.CloseCurlyBracesToken)
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line php5/php5.y:1282
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			switch n := yyDollar[1].node.(type) {
			case *stmt.Class:
				n.ClassName = name
				n.Stmts = yyDollar[6].list
				n.Extends = yyDollar[3].ClassExtends
				n.Implements = yyDollar[4].ClassImplements

			case *stmt.Trait:
				// TODO: is it possible that trait extend or implement
				n.TraitName = name
				n.Stmts = yyDollar[6].list
			}
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[7].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseCurlyBracesToken)
		}
	case 95:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1308
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = stmt.NewInterface(name, yyDollar[3].InterfaceExtends, yyDollar[5].list, "")

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseCurlyBracesToken)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1326
		{
			yyVAL.node = stmt.NewClass(nil, nil, nil, nil, nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ClassToken)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1336
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(classModifier, yyDollar[1].token, comment.AbstractToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ClassToken)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1349
		{
			yyVAL.node = stmt.NewTrait(nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TraitToken)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1359
		{
			classModifier := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewClass(nil, []node.Node{classModifier}, nil, nil, nil, nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(classModifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(classModifier, yyDollar[1].token, comment.FinalToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ClassToken)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1375
		{
			yyVAL.ClassExtends = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1377
		{
			yyVAL.ClassExtends = stmt.NewClassExtends(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.ClassExtends, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.ClassExtends, yyDollar[1].token, comment.ExtendsToken)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1390
		{
			yyVAL.token = yyDollar[1].token
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1395
		{
			yyVAL.InterfaceExtends = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1397
		{
			yyVAL.InterfaceExtends = stmt.NewInterfaceExtends(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.InterfaceExtends, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.InterfaceExtends, yyDollar[1].token, comment.ExtendsToken)
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1410
		{
			yyVAL.ClassImplements = nil
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1412
		{
			yyVAL.ClassImplements = stmt.NewClassImplements(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.ClassImplements, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.ClassImplements, yyDollar[1].token, comment.ImplementsToken)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1425
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1427
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1437
		{
			yyVAL.node = nil
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1439
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoubleArrowToken)
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1449
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1451
		{
			yyVAL.node = expr.NewReference(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyDollar[2].node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AmpersandToken)
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1461
		{
			yyVAL.node = expr.NewList(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ListToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1476
		{
			yyVAL.node = stmt.NewFor(nil, nil, nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1483
		{
			stmtList := stmt.NewStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltFor(nil, nil, nil, stmtList)

			// save position
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EndforToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1500
		{
			yyVAL.node = stmt.NewForeach(nil, nil, nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1507
		{
			stmtList := stmt.NewStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltForeach(nil, nil, nil, stmtList)

			// save position
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EndforeachToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1525
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1527
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EnddeclareToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1543
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			constant := stmt.NewConstant(name, yyDollar[3].node, "")
			yyVAL.list = []node.Node{constant}

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[1].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[2].token, comment.EqualToken)
		}
	case 121:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1557
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			yyVAL.list = append(yyDollar[1].list, constant)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.StringToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[4].token, comment.EqualToken)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1576
		{
			caseList := stmt.NewCaseList(yyDollar[2].list)
			yyVAL.node = stmt.NewSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[3].token, comment.CloseCurlyBracesToken)
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1589
		{
			caseList := stmt.NewCaseList(yyDollar[3].list)
			yyVAL.node = stmt.NewSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[2].token, comment.SemiColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1603
		{
			caseList := stmt.NewCaseList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[3].token, comment.EndswitchToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1617
		{

			caseList := stmt.NewCaseList(yyDollar[3].list)
			yyVAL.node = stmt.NewAltSwitch(nil, caseList)

			// save position
			yylex.(*Parser).positions.AddPosition(caseList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[2].token, comment.SemiColonToken)
			yylex.(*Parser).comments.AddFromToken(caseList, yyDollar[4].token, comment.EndswitchToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.SemiColonToken)
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1637
		{
			yyVAL.list = []node.Node{}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1639
		{
			_case := stmt.NewCase(yyDollar[3].node, yyDollar[5].list)
			yyVAL.list = append(yyDollar[1].list, _case)

			// save position
			yylex.(*Parser).positions.AddPosition(_case, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_case, yyDollar[2].token, comment.CaseToken)
			yylex.(*Parser).comments.AddFromToken(_case, yyDollar[4].token, comment.CaseSeparatorToken)
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1651
		{
			_default := stmt.NewDefault(yyDollar[4].list)
			yyVAL.list = append(yyDollar[1].list, _default)

			// save position
			yylex.(*Parser).positions.AddPosition(_default, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_default, yyDollar[2].token, comment.DefaultToken)
			yylex.(*Parser).comments.AddFromToken(_default, yyDollar[3].token, comment.CaseSeparatorToken)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1667
		{
			yyVAL.token = yyDollar[1].token
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1669
		{
			yyVAL.token = yyDollar[1].token
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1675
		{
			yyVAL.node = stmt.NewWhile(nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1682
		{
			stmtList := stmt.NewStmtList(yyDollar[2].list)
			yyVAL.node = stmt.NewAltWhile(nil, stmtList)

			// save position
			yylex.(*Parser).positions.AddPosition(stmtList, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ColonToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EndwhileToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.SemiColonToken)
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1701
		{
			yyVAL.list = nil
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1703
		{
			_elseIf := stmt.NewElseIf(yyDollar[3].node, yyDollar[4].node)
			yyVAL.list = append(yyDollar[1].list, _elseIf)

			// save position
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_elseIf, yyDollar[2].token, comment.ElseifToken)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1718
		{
			yyVAL.list = nil
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:1720
		{
			stmts := stmt.NewStmtList(yyDollar[5].list)
			_elseIf := stmt.NewAltElseIf(yyDollar[3].node, stmts)
			yyVAL.list = append(yyDollar[1].list, _elseIf)

			// save position
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list))
			yylex.(*Parser).positions.AddPosition(_elseIf, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(_elseIf, yyDollar[2].token, comment.ElseifToken)
			yylex.(*Parser).comments.AddFromToken(_elseIf, yyDollar[4].token, comment.ColonToken)
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1738
		{
			yyVAL.node = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1740
		{
			yyVAL.node = stmt.NewElse(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ElseToken)
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1754
		{
			yyVAL.node = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1756
		{
			stmts := stmt.NewStmtList(yyDollar[3].list)
			yyVAL.node = stmt.NewAltElse(stmts)

			// save position
			yylex.(*Parser).positions.AddPosition(stmts, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ElseToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ColonToken)
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1773
		{
			yyVAL.list = yyDollar[1].list
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1775
		{
			yyVAL.list = nil
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1780
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1782
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:1792
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, nil, yyDollar[2].token != nil, yyDollar[3].token != nil)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))
			} else if yyDollar[2].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token))
			} else if yyDollar[3].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			}

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EllipsisToken)
			}
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.VariableToken)
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:1820
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			yyVAL.node = node.NewParameter(yyDollar[1].node, variable, yyDollar[6].node, yyDollar[2].token != nil, yyDollar[3].token != nil)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			if yyDollar[1].node != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node))
			} else if yyDollar[2].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node))
			} else if yyDollar[3].token != nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
			}

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.EllipsisToken)
			}
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.EqualToken)
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:1853
		{
			yyVAL.node = nil
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1855
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayToken)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1865
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.CallableToken)
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1875
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1881
		{
			yyVAL.node = node.NewArgumentList(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CloseParenthesisToken)
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1892
		{
			yyVAL.node = node.NewArgumentList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1903
		{
			arg := node.NewArgument(yyDollar[2].node, false, false)
			yyVAL.node = node.NewArgumentList([]node.Node{arg})

			// save position
			yylex.(*Parser).positions.AddPosition(arg, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1920
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1922
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1932
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1939
		{
			yyVAL.node = node.NewArgument(yyDollar[1].node, false, false)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1946
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, false, true)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AmpersandToken)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1956
		{
			yyVAL.node = node.NewArgument(yyDollar[2].node, true, false)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EllipsisToken)
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:1969
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1976
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:1982
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:1994
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarToken)
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2004
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2020
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, nil)
			yyVAL.list = append(yyDollar[1].list, staticVar)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)
		}
	case 166:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2036
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, yyDollar[5].node)
			yyVAL.list = append(yyDollar[1].list, staticVar)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(staticVar, yyDollar[4].token, comment.EqualToken)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2053
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, nil)
			yyVAL.list = []node.Node{staticVar}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2068
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			staticVar := stmt.NewStaticVar(variable, yyDollar[3].node)
			yyVAL.list = []node.Node{staticVar}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(staticVar, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(staticVar, yyDollar[2].token, comment.EqualToken)
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2088
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2090
		{
			yyVAL.list = []node.Node{}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2096
		{
			yyVAL.node = stmt.NewPropertyList(yyDollar[1].list, yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.SemiColonToken)
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2106
		{
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2116
		{
			yyVAL.node = yyDollar[1].node
		}
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line php5/php5.y:2120
		{
			name := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewClassMethod(name, yyDollar[1].list, yyDollar[3].token != nil, yyDollar[6].list, nil, yyDollar[8].node, "")

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			if yyDollar[1].list == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[8].node))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListNodePosition(yyDollar[1].list, yyDollar[8].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.FunctionToken)
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[4].token, comment.IdentifierToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.CloseParenthesisToken)
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2145
		{
			var adaptationList *stmt.TraitAdaptationList
			switch n := yyDollar[3].node.(type) {
			case *stmt.TraitAdaptationList:
				adaptationList = n
			default:
				adaptationList = nil
			}
			yyVAL.node = stmt.NewTraitUse(yyDollar[2].list, adaptationList)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UseToken)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2165
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2167
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2177
		{
			yyVAL.node = stmt.NewNop()

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SemiColonToken)

		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2187
		{
			yyVAL.node = stmt.NewTraitAdaptationList(yyDollar[2].list)

			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2200
		{
			yyVAL.list = nil
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2202
		{
			yyVAL.list = yyDollar[1].list
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2207
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2209
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2214
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2221
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SemiColonToken)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2231
		{
			yyVAL.node = stmt.NewTraitUsePrecedence(yyDollar[1].node, yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.InsteadofToken)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2244
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2246
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2256
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = stmt.NewTraitMethodRef(nil, name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[1].token, comment.IdentifierToken)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2268
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2273
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = stmt.NewTraitMethodRef(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
			yylex.(*Parser).comments.AddFromToken(target, yyDollar[3].token, comment.IdentifierToken)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2289
		{
			alias := node.NewIdentifier(yyDollar[4].token.Value)
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, alias)

			// save position
			yylex.(*Parser).positions.AddPosition(alias, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
			yylex.(*Parser).comments.AddFromToken(alias, yyDollar[4].token, comment.IdentifierToken)
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2302
		{
			yyVAL.node = stmt.NewTraitUseAlias(yyDollar[1].node, yyDollar[3].node, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsToken)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2315
		{
			yyVAL.node = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2317
		{
			yyVAL.node = yyDollar[1].node
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2322
		{
			yyVAL.node = stmt.NewNop()

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.SemiColonToken)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2332
		{
			yyVAL.node = stmt.NewStmtList(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2346
		{
			yyVAL.list = yyDollar[1].list
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2348
		{
			modifier := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.list = []node.Node{modifier}

			// save position
			yylex.(*Parser).positions.AddPosition(modifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(modifier, yyDollar[1].token, comment.VarToken)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2362
		{
			yyVAL.list = nil
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2364
		{
			yyVAL.list = yyDollar[1].list
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2369
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2371
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2376
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PublicToken)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2386
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ProtectedToken)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2396
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PrivateToken)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2406
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2416
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AbstractToken)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2426
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FinalToken)
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2439
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, nil, "")
			yyVAL.list = append(yyDollar[1].list, property)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2455
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, yyDollar[5].node, "")
			yyVAL.list = append(yyDollar[1].list, property)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(property, yyDollar[4].token, comment.EqualToken)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2472
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, nil, "")
			yyVAL.list = []node.Node{property}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2487
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			property := stmt.NewProperty(variable, yyDollar[3].node, "")
			yyVAL.list = []node.Node{property}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(property, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(property, yyDollar[2].token, comment.EqualToken)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:2506
		{
			name := node.NewIdentifier(yyDollar[3].token.Value)
			constant := stmt.NewConstant(name, yyDollar[5].node, "")
			constList := yyDollar[1].node.(*stmt.ClassConstList)
			constList.Consts = append(constList.Consts, constant)
			yyVAL.node = yyDollar[1].node

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node))
			yylex.(*Parser).positions.AddPosition(yyDollar[1].node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(constList.Consts), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[3].token, comment.IdentifierToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[4].token, comment.EqualToken)
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2524
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			constant := stmt.NewConstant(name, yyDollar[4].node, "")
			yyVAL.node = stmt.NewClassConstList(nil, []node.Node{constant})

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(constant, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ConstToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.IdentifierToken)
			yylex.(*Parser).comments.AddFromToken(constant, yyDollar[3].token, comment.EqualToken)
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2543
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2550
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2556
		{
			yyVAL.list = nil
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2558
		{
			yyVAL.list = yyDollar[1].list
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2563
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2570
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2575
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2577
		{
			yyVAL.list = yyDollar[1].list
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2582
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2594
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[2].node)
			yyVAL.list = []node.Node{fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[1].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[3].token, comment.CloseSquareBracket)
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2609
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2611
		{
			yyVAL.list = yyDollar[1].list
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2613
		{
			yyVAL.list = yyDollar[1].list
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:2618
		{
			yyVAL.list = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:2620
		{
			yyVAL.list = yyDollar[1].list
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2625
		{

			if yyDollar[3].node != nil {
				yyVAL.node = expr.NewNew(yyDollar[2].node, yyDollar[3].node.(*node.ArgumentList))
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node))
			} else {
				yyVAL.node = expr.NewNew(yyDollar[2].node, nil)
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NewToken)
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2642
		{
			list := expr.NewList(yyDollar[3].list)
			yyVAL.node = assign.NewAssign(list, yyDollar[6].node)

			// save position
			yylex.(*Parser).positions.AddPosition(list, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(list, yyDollar[1].token, comment.ListToken)
			yylex.(*Parser).comments.AddFromToken(list, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(list, yyDollar[4].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.EqualToken)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2657
		{
			yyVAL.node = assign.NewAssign(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.EqualToken)
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:2667
		{
			yyVAL.node = assign.NewReference(yyDollar[1].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.EqualToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:2678
		{
			var _new *expr.New

			if yyDollar[6].node != nil {
				_new = expr.NewNew(yyDollar[5].node, yyDollar[6].node.(*node.ArgumentList))
			} else {
				_new = expr.NewNew(yyDollar[5].node, nil)
			}
			yyVAL.node = assign.NewReference(yyDollar[1].node, _new)

			// save position
			if yyDollar[6].node != nil {
				yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node))
			} else {
				yylex.(*Parser).positions.AddPosition(_new, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[5].node))
			}
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, _new))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.EqualToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)
			yylex.(*Parser).comments.AddFromToken(_new, yyDollar[4].token, comment.NewToken)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2702
		{
			yyVAL.node = expr.NewClone(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.CloneToken)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2712
		{
			yyVAL.node = assign.NewPlus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PlusEqualToken)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2722
		{
			yyVAL.node = assign.NewMinus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MinusEqualToken)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2732
		{
			yyVAL.node = assign.NewMul(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MulEqualToken)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2742
		{
			yyVAL.node = assign.NewPow(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PowEqualToken)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2752
		{
			yyVAL.node = assign.NewDiv(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DivEqualToken)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2762
		{
			yyVAL.node = assign.NewConcat(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ConcatEqualToken)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2772
		{
			yyVAL.node = assign.NewMod(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ModEqualToken)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2782
		{
			yyVAL.node = assign.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AndEqualToken)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2792
		{
			yyVAL.node = assign.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OrEqualToken)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2802
		{
			yyVAL.node = assign.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.XorEqualToken)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2812
		{
			yyVAL.node = assign.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlEqualToken)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2822
		{
			yyVAL.node = assign.NewShiftRight(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SrEqualToken)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2832
		{
			yyVAL.node = expr.NewPostInc(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IncToken)
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2842
		{
			yyVAL.node = expr.NewPreInc(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IncToken)
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2852
		{
			yyVAL.node = expr.NewPostDec(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DecToken)
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:2862
		{
			yyVAL.node = expr.NewPreDec(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DecToken)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2872
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanOrToken)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2882
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanAndToken)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2892
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalOrToken)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2902
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalAndToken)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2912
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalXorToken)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2922
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.VerticalBarToken)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2932
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2942
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CaretToken)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2952
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DotToken)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2962
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PlusToken)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2972
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MinusToken)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2982
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsteriskToken)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:2992
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PowToken)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3002
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlashToken)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3012
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PercentToken)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3022
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlToken)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3032
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SrToken)
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3042
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PlusToken)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3052
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.MinusToken)
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3062
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ExclamationMarkToken)
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3072
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TildeToken)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3082
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsIdenticalToken)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3092
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotIdenticalToken)
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3102
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsEqualToken)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3112
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotEqualToken)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3122
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LessToken)
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3132
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsSmallerOrEqualToken)
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3142
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.GreaterToken)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3152
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsGreaterOrEqualToken)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3162
		{
			yyVAL.node = expr.NewInstanceOf(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.InstanceofToken)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3172
		{
			yyVAL.node = yyDollar[1].node
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3174
		{
			yyVAL.node = yyDollar[1].node
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3176
		{
			yyVAL.node = yyDollar[2].node

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yyVAL.node = nn
				}

				// save position
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, n))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:3203
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.ColonToken)
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3214
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.ColonToken)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3225
		{
			yyVAL.node = yyDollar[1].node
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3227
		{
			yyVAL.node = cast.NewInt(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IntCastToken)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3237
		{
			yyVAL.node = cast.NewDouble(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoubleCastToken)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3247
		{
			yyVAL.node = cast.NewString(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StringCastToken)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3257
		{
			yyVAL.node = cast.NewArray(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayCastToken)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3267
		{
			yyVAL.node = cast.NewObject(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ObjectCastToken)
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3277
		{
			yyVAL.node = cast.NewBool(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BoolCastToken)
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3287
		{
			yyVAL.node = cast.NewUnset(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.UnsetCastToken)
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3297
		{
			if strings.EqualFold(yyDollar[1].token.Value, "die") {
				yyVAL.node = expr.NewDie(nil)
				if yyDollar[2].node != nil {
					yyVAL.node.(*expr.Die).Expr = yyDollar[2].node.(*expr.Exit).Expr
				}
			} else {
				yyVAL.node = expr.NewExit(nil)
				if yyDollar[2].node != nil {
					yyVAL.node.(*expr.Exit).Expr = yyDollar[2].node.(*expr.Exit).Expr
				}
			}

			// save position
			if yyDollar[2].node == nil {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			} else {
				yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ExitToken)

			if yyDollar[2].node != nil {
				yylex.(*Parser).comments.AddFromChildNode(yyVAL.node, yyDollar[2].node)
			}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3325
		{
			yyVAL.node = expr.NewErrorSuppress(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.AtToken)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3335
		{
			yyVAL.node = yyDollar[1].node
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3337
		{
			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3339
		{
			yyVAL.node = yyDollar[1].node
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3341
		{
			yyVAL.node = expr.NewShellExec(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.BackquoteToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.BackquoteToken)
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3352
		{
			yyVAL.node = expr.NewPrint(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PrintToken)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3362
		{
			yyVAL.node = expr.NewYield(nil, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line php5/php5.y:3372
		{
			yyVAL.node = expr.NewClosure(yyDollar[4].list, yyDollar[6].ClosureUse, nil, yyDollar[8].list, false, yyDollar[2].token != nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FunctionToken)
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[7].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[9].token, comment.CloseCurlyBracesToken)
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line php5/php5.y:3389
		{
			yyVAL.node = expr.NewClosure(yyDollar[5].list, yyDollar[7].ClosureUse, nil, yyDollar[9].list, true, yyDollar[3].token != nil, "")

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[10].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.FunctionToken)
			if yyDollar[3].token != nil {
				yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.AmpersandToken)
			}
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[8].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[10].token, comment.CloseCurlyBracesToken)
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3410
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3420
		{
			yyVAL.node = expr.NewYield(nil, yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3430
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.DoubleArrowToken)
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3441
		{
			yyVAL.node = expr.NewYield(yyDollar[2].node, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.YieldToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.DoubleArrowToken)
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3455
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3466
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3477
		{
			str := scalar.NewString(yyDollar[1].token.Value)
			yyVAL.node = expr.NewArrayDimFetch(str, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(str, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3490
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3504
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3516
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseSquareBracket)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3530
		{
			yyVAL.token = yyDollar[1].token
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3535
		{
			yyVAL.ClosureUse = nil
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3537
		{
			yyVAL.ClosureUse = expr.NewClosureUse(yyDollar[3].list)

			yylex.(*Parser).positions.AddPosition(yyVAL.ClosureUse, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3546
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[3].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			yyVAL.list = append(yyDollar[1].list, variable)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[3].token, comment.VariableToken)
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3560
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[4].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			reference := expr.NewReference(variable)
			yyVAL.list = append(yyDollar[1].list, reference)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[3].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[4].token, comment.VariableToken)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3576
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			yyVAL.list = []node.Node{variable}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3589
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[2].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			reference := expr.NewReference(variable)
			yyVAL.list = []node.Node{reference}

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[2].token, comment.VariableToken)
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3608
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = expr.NewFunctionCall(name, yyDollar[2].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(name, yyDollar[2].node))
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3617
		{
			funcName := name.NewRelative(yyDollar[3].list)
			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(funcName, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(funcName, yyDollar[2].token, comment.NsSeparatorToken)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3630
		{
			funcName := name.NewFullyQualified(yyDollar[2].list)
			yyVAL.node = expr.NewFunctionCall(funcName, yyDollar[3].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(funcName, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(funcName, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3642
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3652
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3662
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3672
		{
			yyVAL.node = expr.NewStaticCall(yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3682
		{
			yyVAL.node = expr.NewFunctionCall(yyDollar[1].node, yyDollar[2].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node))
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3692
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StaticToken)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3702
		{
			yyVAL.node = name.NewName(yyDollar[1].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3709
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3720
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3733
		{
			yyVAL.node = name.NewName(yyDollar[1].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3740
		{
			yyVAL.node = name.NewRelative(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3751
		{
			yyVAL.node = name.NewFullyQualified(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3764
		{
			yyVAL.node = yyDollar[1].node
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3766
		{
			yyVAL.node = yyDollar[1].node
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:3771
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[3].list[0], yyDollar[2].token, comment.ObjectOperatorToken)

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3806
		{
			yyVAL.node = yyDollar[1].node
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3812
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3814
		{
			yyVAL.list = []node.Node{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3820
		{
			yyVAL.list = yyDollar[2].list

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[2].list[0], yyDollar[1].token, comment.ObjectOperatorToken)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3830
		{
			yyVAL.node = nil
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3832
		{
			yyVAL.node = expr.NewExit(nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CloseParenthesisToken)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3843
		{
			yyVAL.node = expr.NewExit(yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3853
		{
			yyVAL.list = []node.Node{}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3855
		{
			yyVAL.list = []node.Node{scalar.NewEncapsedStringPart(yyDollar[1].token.Value)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3857
		{
			yyVAL.list = yyDollar[1].list
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:3862
		{
			yyVAL.node = nil
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3864
		{
			yyVAL.node = yyDollar[1].node
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3869
		{
			yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.LnumberToken)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3879
		{
			yyVAL.node = scalar.NewDnumber(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DnumberToken)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3889
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ConstantEncapsedStringToken)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3899
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.LineToken)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3909
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FileToken)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3919
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DirToken)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3929
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TraitCToken)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3939
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.MethodCToken)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3949
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.FuncCToken)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:3959
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsCToken)
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3969
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, []node.Node{encapsed})

			// save position
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StartHeredocToken)
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:3981
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, nil)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StartHeredocToken)
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:3994
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
			yylex.(*Parser).comments.AddFromToken(target, yyDollar[3].token, comment.IdentifierToken)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4010
		{
			yyVAL.node = yyDollar[1].node
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4015
		{
			yyVAL.node = yyDollar[1].node
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4017
		{
			yyVAL.node = yyDollar[1].node
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4019
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4028
		{
			name := name.NewRelative(yyDollar[3].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4041
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4053
		{
			yyVAL.node = expr.NewArray(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ArrayToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4065
		{
			yyVAL.node = expr.NewShortArray(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseSquareBracket)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4076
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4078
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ClassCToken)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4088
		{
			yyVAL.node = yyDollar[1].node
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4093
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4104
		{
			yyVAL.node = binary.NewPlus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PlusToken)
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4114
		{
			yyVAL.node = binary.NewMinus(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.MinusToken)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4124
		{
			yyVAL.node = binary.NewMul(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AsteriskToken)
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4134
		{
			yyVAL.node = binary.NewPow(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PowToken)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4144
		{
			yyVAL.node = binary.NewDiv(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlashToken)
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4154
		{
			yyVAL.node = binary.NewMod(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PercentToken)
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4164
		{
			yyVAL.node = expr.NewBooleanNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ExclamationMarkToken)
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4174
		{
			yyVAL.node = expr.NewBitwiseNot(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.TildeToken)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4184
		{
			yyVAL.node = binary.NewBitwiseOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.VerticalBarToken)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4194
		{
			yyVAL.node = binary.NewBitwiseAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.AmpersandToken)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4204
		{
			yyVAL.node = binary.NewBitwiseXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.CaretToken)
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4214
		{
			yyVAL.node = binary.NewShiftLeft(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SlToken)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4224
		{
			yyVAL.node = binary.NewShiftRight(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.SrToken)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4234
		{
			yyVAL.node = binary.NewConcat(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.DotToken)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4244
		{
			yyVAL.node = binary.NewLogicalXor(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalXorToken)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4254
		{
			yyVAL.node = binary.NewLogicalAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalAndToken)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4264
		{
			yyVAL.node = binary.NewLogicalOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LogicalOrToken)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4274
		{
			yyVAL.node = binary.NewBooleanAnd(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanAndToken)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4284
		{
			yyVAL.node = binary.NewBooleanOr(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.BooleanOrToken)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4294
		{
			yyVAL.node = binary.NewIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsIdenticalToken)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4304
		{
			yyVAL.node = binary.NewNotIdentical(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotIdenticalToken)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4314
		{
			yyVAL.node = binary.NewEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsEqualToken)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4324
		{
			yyVAL.node = binary.NewNotEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsNotEqualToken)
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4334
		{
			yyVAL.node = binary.NewSmaller(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.LessToken)
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4344
		{
			yyVAL.node = binary.NewGreater(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.GreaterToken)
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4354
		{
			yyVAL.node = binary.NewSmallerOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsSmallerOrEqualToken)
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4364
		{
			yyVAL.node = binary.NewGreaterOrEqual(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.IsGreaterOrEqualToken)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4374
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, nil, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.ColonToken)
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:4385
		{
			yyVAL.node = expr.NewTernary(yyDollar[1].node, yyDollar[3].node, yyDollar[5].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.QuestionMarkToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.ColonToken)
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4396
		{
			yyVAL.node = expr.NewUnaryPlus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.PlusToken)
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4406
		{
			yyVAL.node = expr.NewUnaryMinus(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.MinusToken)
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4416
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseParenthesisToken)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4427
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4429
		{
			name := name.NewName(yyDollar[1].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4438
		{
			name := name.NewRelative(yyDollar[3].list)
			yyVAL.node = expr.NewConstFetch(name)
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NamespaceToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.NsSeparatorToken)
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4449
		{
			name := name.NewFullyQualified(yyDollar[2].list)
			yyVAL.node = expr.NewConstFetch(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(name))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NsSeparatorToken)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4464
		{
			name := node.NewIdentifier(yyDollar[1].token.Value)
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[1].token, comment.StringVarnameToken)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4476
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4478
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4480
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4482
		{
			yyVAL.node = scalar.NewEncapsed(yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DoubleQuoteToken)
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4492
		{
			yyVAL.node = scalar.NewHeredoc(yyDollar[1].token.Value, yyDollar[2].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StartHeredocToken)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4502
		{
			yyVAL.node = scalar.NewMagicConstant(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.ClassCToken)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4515
		{
			yyVAL.list = nil
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4517
		{
			yyVAL.list = yyDollar[1].list

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4529
		{
			yyVAL.token = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4531
		{
			yyVAL.token = yyDollar[1].token
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:4536
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[4].token, comment.DoubleArrowToken)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4548
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4559
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[2].token, comment.DoubleArrowToken)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4570
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4581
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4583
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4588
		{
			yyVAL.node = yyDollar[2].node
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4590
		{
			yyVAL.node = yyDollar[2].node
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4596
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4602
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4607
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:4612
		{
			yyVAL.node = yyDollar[1].node

			if yyDollar[4].list != nil {
				yyDollar[4].list[0].(*expr.MethodCall).Method = yyDollar[3].list[len(yyDollar[3].list)-1].(*expr.PropertyFetch).Property
				yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
			}

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[3].list[0], yyDollar[2].token, comment.ObjectOperatorToken)

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *expr.ArrayDimFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.PropertyFetch:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn

				case *expr.MethodCall:
					nn.Variable = yyVAL.node
					yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn))
					yyVAL.node = nn
				}
			}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4662
		{
			yyVAL.node = yyDollar[1].node
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4667
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4669
		{
			yyVAL.list = []node.Node{}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4675
		{
			if yyDollar[3].list != nil {
				yyDollar[3].list[0].(*expr.MethodCall).Method = yyDollar[2].list[len(yyDollar[2].list)-1].(*expr.PropertyFetch).Property
				yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
			}

			yyVAL.list = yyDollar[2].list

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyDollar[2].list[0], yyDollar[1].token, comment.ObjectOperatorToken)
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4690
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4702
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = []node.Node{yyDollar[1].node, fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4717
		{
			yyVAL.node = expr.NewMethodCall(nil, nil, yyDollar[1].node.(*node.ArgumentList))

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4727
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4729
		{
			yyVAL.list = yyDollar[1].list
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4731
		{
			yyVAL.list = nil
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4736
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4738
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4751
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4761
		{
			yyVAL.node = expr.NewStaticPropertyFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4775
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4780
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4791
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4804
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4805
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4806
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4812
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4814
		{
			yyDollar[1].simpleIndirectReference.last.SetVarName(yyDollar[2].node)

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				yylex.(*Parser).positions[n] = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4824
		{
			yyVAL.node = yyDollar[1].node
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4829
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4840
		{
			yyVAL.node = expr.NewArrayDimFetch(yyDollar[1].node, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4851
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4857
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4869
		{
			yyVAL.node = expr.NewVariable(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:4884
		{
			yyVAL.node = nil
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4886
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4892
		{
			yyVAL.list = yyDollar[1].list
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4894
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4905
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:4917
		{
			fetch := expr.NewArrayDimFetch(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[2].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[4].token, comment.CloseCurlyBracesToken)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4929
		{
			fetch := expr.NewPropertyFetch(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{fetch}

			// save position
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4940
		{
			yyVAL.node = node.NewIdentifier(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StringToken)
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4950
		{
			yyVAL.node = yyDollar[2].node

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.OpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:4964
		{
			n := expr.NewVariable(nil)
			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*expr.Variable{n}, n}

			// save position
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(n, yyDollar[1].token, comment.DollarToken)
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:4975
		{
			n := expr.NewVariable(nil)

			yyDollar[1].simpleIndirectReference.last.SetVarName(n)
			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference

			// save position
			yylex.(*Parser).positions.AddPosition(n, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(n, yyDollar[2].token, comment.DollarToken)
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:4993
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5000
		{
			if yyDollar[1].node == nil {
				yyVAL.list = []node.Node{}
			} else {
				yyVAL.list = []node.Node{yyDollar[1].node}
			}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5012
		{
			yyVAL.node = expr.NewArrayItem(nil, yyDollar[1].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5019
		{
			item := expr.NewList(yyDollar[3].list)
			yyVAL.node = expr.NewArrayItem(nil, item)

			// save position
			yylex.(*Parser).positions.AddPosition(item, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodePosition(item))

			// save comments
			yylex.(*Parser).comments.AddFromToken(item, yyDollar[1].token, comment.ListToken)
			yylex.(*Parser).comments.AddFromToken(item, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(item, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:5033
		{
			yyVAL.node = nil
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line php5/php5.y:5039
		{
			yyVAL.list = []node.Node{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5041
		{
			yyVAL.list = yyDollar[1].list

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			}
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line php5/php5.y:5053
		{
			arrayItem := expr.NewArrayItem(yyDollar[3].node, yyDollar[5].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[4].token, comment.DoubleArrowToken)
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5065
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[3].node)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5076
		{
			arrayItem := expr.NewArrayItem(yyDollar[1].node, yyDollar[3].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[2].token, comment.DoubleArrowToken)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5087
		{
			arrayItem := expr.NewArrayItem(nil, yyDollar[1].node)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node))
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:5095
		{
			reference := expr.NewReference(yyDollar[6].node)
			arrayItem := expr.NewArrayItem(yyDollar[3].node, reference)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[5].token, yyDollar[6].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[4].token, comment.DoubleArrowToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[5].token, comment.AmpersandToken)
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5110
		{
			reference := expr.NewReference(yyDollar[4].node)
			arrayItem := expr.NewArrayItem(nil, reference)
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[3].token, comment.AmpersandToken)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5124
		{
			reference := expr.NewReference(yyDollar[4].node)
			arrayItem := expr.NewArrayItem(yyDollar[1].node, reference)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(arrayItem, yyDollar[2].token, comment.DoubleArrowToken)
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[3].token, comment.AmpersandToken)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5138
		{
			reference := expr.NewReference(yyDollar[2].node)
			arrayItem := expr.NewArrayItem(nil, reference)
			yyVAL.list = []node.Node{arrayItem}

			// save position
			yylex.(*Parser).positions.AddPosition(reference, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))
			yylex.(*Parser).positions.AddPosition(arrayItem, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(reference, yyDollar[1].token, comment.AmpersandToken)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5154
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5156
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[2].token.Value)
			yyVAL.list = append(yyDollar[1].list, encapsed)

			// save position
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(encapsed, yyDollar[2].token, comment.EncapsedAndWhitespaceToken)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5167
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5169
		{
			encapsed := scalar.NewEncapsedStringPart(yyDollar[1].token.Value)
			yyVAL.list = []node.Node{encapsed, yyDollar[2].node}

			// save position
			yylex.(*Parser).positions.AddPosition(encapsed, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(encapsed, yyDollar[1].token, comment.EncapsedAndWhitespaceToken)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5183
		{
			name := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5195
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseSquareBracket)
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5211
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			variable := expr.NewVariable(identifier)
			fetch := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewPropertyFetch(variable, fetch)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(fetch, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[1].token, comment.VariableToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.ObjectOperatorToken)
			yylex.(*Parser).comments.AddFromToken(fetch, yyDollar[3].token, comment.StringToken)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5229
		{
			yyVAL.node = expr.NewVariable(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarOpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5240
		{
			name := node.NewIdentifier(yyDollar[2].token.Value)
			yyVAL.node = expr.NewVariable(name)

			// save position
			yylex.(*Parser).positions.AddPosition(name, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarOpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(name, yyDollar[2].token, comment.StringVarnameToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.CloseCurlyBracesToken)
		}
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line php5/php5.y:5254
		{
			identifier := node.NewIdentifier(yyDollar[2].token.Value)
			variable := expr.NewVariable(identifier)
			yyVAL.node = expr.NewArrayDimFetch(variable, yyDollar[4].node)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(variable, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.DollarOpenCurlyBracesToken)
			yylex.(*Parser).comments.AddFromToken(variable, yyDollar[2].token, comment.StringVarnameToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[3].token, comment.OpenSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[5].token, comment.CloseSquareBracket)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[6].token, comment.CloseCurlyBracesToken)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5272
		{
			yyVAL.node = yyDollar[2].node
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5279
		{
			yyVAL.node = scalar.NewString(yyDollar[1].token.Value)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.StringToken)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5289
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(yyDollar[1].token.Value); err == nil {
				yyVAL.node = scalar.NewLnumber(yyDollar[1].token.Value)
			} else {
				yyVAL.node = scalar.NewString(yyDollar[1].token.Value)
			}

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.NumStringToken)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5304
		{
			identifier := node.NewIdentifier(strings.TrimLeft(yyDollar[1].token.Value, "$"))
			yyVAL.node = expr.NewVariable(identifier)

			// save position
			yylex.(*Parser).positions.AddPosition(identifier, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.VariableToken)
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5319
		{
			yyVAL.node = expr.NewIsset(yyDollar[3].list)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IssetToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5331
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EmptyToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5343
		{
			yyVAL.node = expr.NewEmpty(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EmptyToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5355
		{
			yyVAL.node = expr.NewInclude(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IncludeToken)
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5365
		{
			yyVAL.node = expr.NewIncludeOnce(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.IncludeOnceToken)
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line php5/php5.y:5375
		{
			yyVAL.node = expr.NewEval(yyDollar[3].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.EvalToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.OpenParenthesisToken)
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[4].token, comment.CloseParenthesisToken)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5387
		{
			yyVAL.node = expr.NewRequire(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.RequireToken)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line php5/php5.y:5397
		{
			yyVAL.node = expr.NewRequireOnce(yyDollar[2].node)

			// save position
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[1].token, comment.RequireOnceToken)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5410
		{
			yyVAL.list = []node.Node{yyDollar[1].node}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5412
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).comments.AddFromToken(lastNode(yyDollar[1].list), yyDollar[2].token, comment.CommaToken)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5422
		{
			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line php5/php5.y:5424
		{
			yyVAL.node = yyDollar[1].node
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5429
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5441
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5456
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line php5/php5.y:5471
		{
			target := node.NewIdentifier(yyDollar[3].token.Value)
			yyVAL.node = expr.NewClassConstFetch(yyDollar[1].node, target)

			// save position
			yylex.(*Parser).positions.AddPosition(target, yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token))
			yylex.(*Parser).positions.AddPosition(yyVAL.node, yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token))

			// save comments
			yylex.(*Parser).comments.AddFromToken(yyVAL.node, yyDollar[2].token, comment.PaamayimNekudotayimToken)
		}
	}
	goto yystack /* stack new state and value */
}
